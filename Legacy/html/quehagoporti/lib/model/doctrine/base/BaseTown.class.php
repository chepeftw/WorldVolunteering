<?php

/**
 * BaseTown
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property integer $department_id
 * @property Department $Department
 * @property Doctrine_Collection $Town
 * 
 * @method string              getName()          Returns the current record's "name" value
 * @method integer             getDepartmentId()  Returns the current record's "department_id" value
 * @method Department          getDepartment()    Returns the current record's "Department" value
 * @method Doctrine_Collection getTown()          Returns the current record's "Town" collection
 * @method Town                setName()          Sets the current record's "name" value
 * @method Town                setDepartmentId()  Sets the current record's "department_id" value
 * @method Town                setDepartment()    Sets the current record's "Department" value
 * @method Town                setTown()          Sets the current record's "Town" collection
 * 
 * @package    quehagoporti
 * @subpackage model
 * @author     Jose Alfredo Alvarez Aldana
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTown extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('town');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('department_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Department', array(
             'local' => 'department_id',
             'foreign' => 'id'));

        $this->hasMany('Association as Town', array(
             'local' => 'id',
             'foreign' => 'town_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}