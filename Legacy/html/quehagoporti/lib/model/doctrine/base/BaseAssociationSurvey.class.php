<?php

/**
 * BaseAssociationSurvey
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property text $address
 * @property integer $country_id
 * @property integer $department_id
 * @property string $town
 * @property text $departments
 * @property text $mision
 * @property text $vision
 * @property text $about_us
 * @property text $what_we_do
 * @property boolean $legal_person
 * @property string $legal_person_type
 * @property string $legal_person_type_other
 * @property string $partner1_name
 * @property string $partner1_email
 * @property integer $partner1_mobile
 * @property string $partner2_name
 * @property string $partner2_email
 * @property integer $partner2_mobile
 * @property boolean $sat_registry
 * @property string $email
 * @property integer $phone1
 * @property integer $phone2
 * @property string $website
 * @property text $facebook_page
 * @property text $twitter_user
 * @property string $logo
 * @property date $founded
 * @property text $history
 * @property integer $quantity_perm_men
 * @property integer $quantity_perm_women
 * @property integer $quantity_temp_men
 * @property integer $quantity_temp_women
 * @property text $requirements
 * @property string $commitment_type
 * @property string $commitment_type_other
 * @property text $commitment
 * @property text $mechanism_commitment
 * @property string $compensation
 * @property string $compensation_type
 * @property string $compensation_type_other
 * @property string $training
 * @property string $training_type
 * @property string $training_type_other
 * @property boolean $donations
 * @property text $method
 * @property text $utilization
 * @property string $ip_address
 * @property double $random_value
 * @property boolean $approved
 * @property boolean $is_active
 * @property Country $Country
 * @property Department $Department
 * @property Doctrine_Collection $Categories
 * @property Doctrine_Collection $Departments
 * @property Doctrine_Collection $AssociationSurvey
 * @property Doctrine_Collection $AssociationSurveyDepartment
 * @property Doctrine_Collection $AssociationSurveyCategory
 * 
 * @method string              getName()                        Returns the current record's "name" value
 * @method text                getAddress()                     Returns the current record's "address" value
 * @method integer             getCountryId()                   Returns the current record's "country_id" value
 * @method integer             getDepartmentId()                Returns the current record's "department_id" value
 * @method string              getTown()                        Returns the current record's "town" value
 * @method text                getDepartments()                 Returns the current record's "departments" value
 * @method text                getMision()                      Returns the current record's "mision" value
 * @method text                getVision()                      Returns the current record's "vision" value
 * @method text                getAboutUs()                     Returns the current record's "about_us" value
 * @method text                getWhatWeDo()                    Returns the current record's "what_we_do" value
 * @method boolean             getLegalPerson()                 Returns the current record's "legal_person" value
 * @method string              getLegalPersonType()             Returns the current record's "legal_person_type" value
 * @method string              getLegalPersonTypeOther()        Returns the current record's "legal_person_type_other" value
 * @method string              getPartner1Name()                Returns the current record's "partner1_name" value
 * @method string              getPartner1Email()               Returns the current record's "partner1_email" value
 * @method integer             getPartner1Mobile()              Returns the current record's "partner1_mobile" value
 * @method string              getPartner2Name()                Returns the current record's "partner2_name" value
 * @method string              getPartner2Email()               Returns the current record's "partner2_email" value
 * @method integer             getPartner2Mobile()              Returns the current record's "partner2_mobile" value
 * @method boolean             getSatRegistry()                 Returns the current record's "sat_registry" value
 * @method string              getEmail()                       Returns the current record's "email" value
 * @method integer             getPhone1()                      Returns the current record's "phone1" value
 * @method integer             getPhone2()                      Returns the current record's "phone2" value
 * @method string              getWebsite()                     Returns the current record's "website" value
 * @method text                getFacebookPage()                Returns the current record's "facebook_page" value
 * @method text                getTwitterUser()                 Returns the current record's "twitter_user" value
 * @method string              getLogo()                        Returns the current record's "logo" value
 * @method date                getFounded()                     Returns the current record's "founded" value
 * @method text                getHistory()                     Returns the current record's "history" value
 * @method integer             getQuantityPermMen()             Returns the current record's "quantity_perm_men" value
 * @method integer             getQuantityPermWomen()           Returns the current record's "quantity_perm_women" value
 * @method integer             getQuantityTempMen()             Returns the current record's "quantity_temp_men" value
 * @method integer             getQuantityTempWomen()           Returns the current record's "quantity_temp_women" value
 * @method text                getRequirements()                Returns the current record's "requirements" value
 * @method string              getCommitmentType()              Returns the current record's "commitment_type" value
 * @method string              getCommitmentTypeOther()         Returns the current record's "commitment_type_other" value
 * @method text                getCommitment()                  Returns the current record's "commitment" value
 * @method text                getMechanismCommitment()         Returns the current record's "mechanism_commitment" value
 * @method string              getCompensation()                Returns the current record's "compensation" value
 * @method string              getCompensationType()            Returns the current record's "compensation_type" value
 * @method string              getCompensationTypeOther()       Returns the current record's "compensation_type_other" value
 * @method string              getTraining()                    Returns the current record's "training" value
 * @method string              getTrainingType()                Returns the current record's "training_type" value
 * @method string              getTrainingTypeOther()           Returns the current record's "training_type_other" value
 * @method boolean             getDonations()                   Returns the current record's "donations" value
 * @method text                getMethod()                      Returns the current record's "method" value
 * @method text                getUtilization()                 Returns the current record's "utilization" value
 * @method string              getIpAddress()                   Returns the current record's "ip_address" value
 * @method double              getRandomValue()                 Returns the current record's "random_value" value
 * @method boolean             getApproved()                    Returns the current record's "approved" value
 * @method boolean             getIsActive()                    Returns the current record's "is_active" value
 * @method Country             getCountry()                     Returns the current record's "Country" value
 * @method Department          getDepartment()                  Returns the current record's "Department" value
 * @method Doctrine_Collection getCategories()                  Returns the current record's "Categories" collection
 * @method Doctrine_Collection getDepartments()                 Returns the current record's "Departments" collection
 * @method Doctrine_Collection getAssociationSurvey()           Returns the current record's "AssociationSurvey" collection
 * @method Doctrine_Collection getAssociationSurveyDepartment() Returns the current record's "AssociationSurveyDepartment" collection
 * @method Doctrine_Collection getAssociationSurveyCategory()   Returns the current record's "AssociationSurveyCategory" collection
 * @method AssociationSurvey   setName()                        Sets the current record's "name" value
 * @method AssociationSurvey   setAddress()                     Sets the current record's "address" value
 * @method AssociationSurvey   setCountryId()                   Sets the current record's "country_id" value
 * @method AssociationSurvey   setDepartmentId()                Sets the current record's "department_id" value
 * @method AssociationSurvey   setTown()                        Sets the current record's "town" value
 * @method AssociationSurvey   setDepartments()                 Sets the current record's "departments" value
 * @method AssociationSurvey   setMision()                      Sets the current record's "mision" value
 * @method AssociationSurvey   setVision()                      Sets the current record's "vision" value
 * @method AssociationSurvey   setAboutUs()                     Sets the current record's "about_us" value
 * @method AssociationSurvey   setWhatWeDo()                    Sets the current record's "what_we_do" value
 * @method AssociationSurvey   setLegalPerson()                 Sets the current record's "legal_person" value
 * @method AssociationSurvey   setLegalPersonType()             Sets the current record's "legal_person_type" value
 * @method AssociationSurvey   setLegalPersonTypeOther()        Sets the current record's "legal_person_type_other" value
 * @method AssociationSurvey   setPartner1Name()                Sets the current record's "partner1_name" value
 * @method AssociationSurvey   setPartner1Email()               Sets the current record's "partner1_email" value
 * @method AssociationSurvey   setPartner1Mobile()              Sets the current record's "partner1_mobile" value
 * @method AssociationSurvey   setPartner2Name()                Sets the current record's "partner2_name" value
 * @method AssociationSurvey   setPartner2Email()               Sets the current record's "partner2_email" value
 * @method AssociationSurvey   setPartner2Mobile()              Sets the current record's "partner2_mobile" value
 * @method AssociationSurvey   setSatRegistry()                 Sets the current record's "sat_registry" value
 * @method AssociationSurvey   setEmail()                       Sets the current record's "email" value
 * @method AssociationSurvey   setPhone1()                      Sets the current record's "phone1" value
 * @method AssociationSurvey   setPhone2()                      Sets the current record's "phone2" value
 * @method AssociationSurvey   setWebsite()                     Sets the current record's "website" value
 * @method AssociationSurvey   setFacebookPage()                Sets the current record's "facebook_page" value
 * @method AssociationSurvey   setTwitterUser()                 Sets the current record's "twitter_user" value
 * @method AssociationSurvey   setLogo()                        Sets the current record's "logo" value
 * @method AssociationSurvey   setFounded()                     Sets the current record's "founded" value
 * @method AssociationSurvey   setHistory()                     Sets the current record's "history" value
 * @method AssociationSurvey   setQuantityPermMen()             Sets the current record's "quantity_perm_men" value
 * @method AssociationSurvey   setQuantityPermWomen()           Sets the current record's "quantity_perm_women" value
 * @method AssociationSurvey   setQuantityTempMen()             Sets the current record's "quantity_temp_men" value
 * @method AssociationSurvey   setQuantityTempWomen()           Sets the current record's "quantity_temp_women" value
 * @method AssociationSurvey   setRequirements()                Sets the current record's "requirements" value
 * @method AssociationSurvey   setCommitmentType()              Sets the current record's "commitment_type" value
 * @method AssociationSurvey   setCommitmentTypeOther()         Sets the current record's "commitment_type_other" value
 * @method AssociationSurvey   setCommitment()                  Sets the current record's "commitment" value
 * @method AssociationSurvey   setMechanismCommitment()         Sets the current record's "mechanism_commitment" value
 * @method AssociationSurvey   setCompensation()                Sets the current record's "compensation" value
 * @method AssociationSurvey   setCompensationType()            Sets the current record's "compensation_type" value
 * @method AssociationSurvey   setCompensationTypeOther()       Sets the current record's "compensation_type_other" value
 * @method AssociationSurvey   setTraining()                    Sets the current record's "training" value
 * @method AssociationSurvey   setTrainingType()                Sets the current record's "training_type" value
 * @method AssociationSurvey   setTrainingTypeOther()           Sets the current record's "training_type_other" value
 * @method AssociationSurvey   setDonations()                   Sets the current record's "donations" value
 * @method AssociationSurvey   setMethod()                      Sets the current record's "method" value
 * @method AssociationSurvey   setUtilization()                 Sets the current record's "utilization" value
 * @method AssociationSurvey   setIpAddress()                   Sets the current record's "ip_address" value
 * @method AssociationSurvey   setRandomValue()                 Sets the current record's "random_value" value
 * @method AssociationSurvey   setApproved()                    Sets the current record's "approved" value
 * @method AssociationSurvey   setIsActive()                    Sets the current record's "is_active" value
 * @method AssociationSurvey   setCountry()                     Sets the current record's "Country" value
 * @method AssociationSurvey   setDepartment()                  Sets the current record's "Department" value
 * @method AssociationSurvey   setCategories()                  Sets the current record's "Categories" collection
 * @method AssociationSurvey   setDepartments()                 Sets the current record's "Departments" collection
 * @method AssociationSurvey   setAssociationSurvey()           Sets the current record's "AssociationSurvey" collection
 * @method AssociationSurvey   setAssociationSurveyDepartment() Sets the current record's "AssociationSurveyDepartment" collection
 * @method AssociationSurvey   setAssociationSurveyCategory()   Sets the current record's "AssociationSurveyCategory" collection
 * 
 * @package    quehagoporti
 * @subpackage model
 * @author     Jose Alfredo Alvarez Aldana
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAssociationSurvey extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('association_survey');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('address', 'text', null, array(
             'type' => 'text',
             'notnull' => true,
             ));
        $this->hasColumn('country_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('department_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('town', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('departments', 'text', null, array(
             'type' => 'text',
             'notnull' => true,
             ));
        $this->hasColumn('mision', 'text', null, array(
             'type' => 'text',
             'notnull' => true,
             ));
        $this->hasColumn('vision', 'text', null, array(
             'type' => 'text',
             'notnull' => true,
             ));
        $this->hasColumn('about_us', 'text', null, array(
             'type' => 'text',
             'notnull' => true,
             ));
        $this->hasColumn('what_we_do', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('legal_person', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('legal_person_type', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('legal_person_type_other', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('partner1_name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('partner1_email', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'email' => true,
             'length' => 255,
             ));
        $this->hasColumn('partner1_mobile', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('partner2_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('partner2_email', 'string', 255, array(
             'type' => 'string',
             'email' => true,
             'length' => 255,
             ));
        $this->hasColumn('partner2_mobile', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('sat_registry', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'email' => true,
             'length' => 255,
             ));
        $this->hasColumn('phone1', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('phone2', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('website', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('facebook_page', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('twitter_user', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('logo', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('founded', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('history', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('quantity_perm_men', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('quantity_perm_women', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('quantity_temp_men', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('quantity_temp_women', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('requirements', 'text', null, array(
             'type' => 'text',
             'notnull' => true,
             ));
        $this->hasColumn('commitment_type', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('commitment_type_other', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('commitment', 'text', null, array(
             'type' => 'text',
             'notnull' => true,
             ));
        $this->hasColumn('mechanism_commitment', 'text', null, array(
             'type' => 'text',
             'notnull' => true,
             ));
        $this->hasColumn('compensation', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('compensation_type', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('compensation_type_other', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('training', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('training_type', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('training_type_other', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('donations', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('method', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('utilization', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('ip_address', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('random_value', 'double', null, array(
             'type' => 'double',
             'default' => 0,
             ));
        $this->hasColumn('approved', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));

        $this->option('orderBy', 'random_value ASC');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Country', array(
             'local' => 'country_id',
             'foreign' => 'id'));

        $this->hasOne('Department', array(
             'local' => 'department_id',
             'foreign' => 'id'));

        $this->hasMany('Category as Categories', array(
             'refClass' => 'AssociationSurveyCategory',
             'local' => 'association_survey_id',
             'foreign' => 'category_id'));

        $this->hasMany('Department as Departments', array(
             'refClass' => 'AssociationSurveyDepartment',
             'local' => 'association_survey_id',
             'foreign' => 'department_id'));

        $this->hasMany('ActivitySurvey as AssociationSurvey', array(
             'local' => 'id',
             'foreign' => 'association_survey_id'));

        $this->hasMany('AssociationSurveyDepartment', array(
             'local' => 'id',
             'foreign' => 'association_survey_id'));

        $this->hasMany('AssociationSurveyCategory', array(
             'local' => 'id',
             'foreign' => 'association_survey_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}