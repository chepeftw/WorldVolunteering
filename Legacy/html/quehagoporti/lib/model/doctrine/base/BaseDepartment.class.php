<?php

/**
 * BaseDepartment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property integer $country_id
 * @property Country $Country
 * @property Doctrine_Collection $Department
 * @property Doctrine_Collection $AssociationSurveyDepartments
 * @property Doctrine_Collection $AssociationSurveyDepartment
 * @property Doctrine_Collection $AssociationDepartment
 * @property Doctrine_Collection $AssociationDepartments
 * 
 * @method string              getName()                         Returns the current record's "name" value
 * @method integer             getCountryId()                    Returns the current record's "country_id" value
 * @method Country             getCountry()                      Returns the current record's "Country" value
 * @method Doctrine_Collection getDepartment()                   Returns the current record's "Department" collection
 * @method Doctrine_Collection getAssociationSurveyDepartments() Returns the current record's "AssociationSurveyDepartments" collection
 * @method Doctrine_Collection getAssociationSurveyDepartment()  Returns the current record's "AssociationSurveyDepartment" collection
 * @method Doctrine_Collection getAssociationDepartment()        Returns the current record's "AssociationDepartment" collection
 * @method Doctrine_Collection getAssociationDepartments()       Returns the current record's "AssociationDepartments" collection
 * @method Department          setName()                         Sets the current record's "name" value
 * @method Department          setCountryId()                    Sets the current record's "country_id" value
 * @method Department          setCountry()                      Sets the current record's "Country" value
 * @method Department          setDepartment()                   Sets the current record's "Department" collection
 * @method Department          setAssociationSurveyDepartments() Sets the current record's "AssociationSurveyDepartments" collection
 * @method Department          setAssociationSurveyDepartment()  Sets the current record's "AssociationSurveyDepartment" collection
 * @method Department          setAssociationDepartment()        Sets the current record's "AssociationDepartment" collection
 * @method Department          setAssociationDepartments()       Sets the current record's "AssociationDepartments" collection
 * 
 * @package    quehagoporti
 * @subpackage model
 * @author     Jose Alfredo Alvarez Aldana
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDepartment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('department');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('country_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Country', array(
             'local' => 'country_id',
             'foreign' => 'id'));

        $this->hasMany('AssociationSurvey as Department', array(
             'local' => 'id',
             'foreign' => 'department_id'));

        $this->hasMany('AssociationSurvey as AssociationSurveyDepartments', array(
             'refClass' => 'AssociationSurveyDepartment',
             'local' => 'department_id',
             'foreign' => 'association_survey_id'));

        $this->hasMany('AssociationSurveyDepartment', array(
             'local' => 'id',
             'foreign' => 'department_id'));

        $this->hasMany('AssociationDepartment', array(
             'local' => 'id',
             'foreign' => 'department_id'));

        $this->hasMany('Association as AssociationDepartments', array(
             'refClass' => 'AssociationDepartment',
             'local' => 'department_id',
             'foreign' => 'association_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}