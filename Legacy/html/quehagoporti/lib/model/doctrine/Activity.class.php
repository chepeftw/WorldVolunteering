<?php

/**
 * Activity
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    quepuedohacerporti
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Activity extends BaseActivity
{
	public function getTitleSlug()
	{
	  return substr( RouteTools::slugify($this->getTitle()), 0, 20 );
	}
	
	public function getAssociationSlug()
	{
	  return RouteTools::slugify($this->getAssociation());
	}
	
	public function getIsHistoric()
	{
		$diff_time = strtotime($this->getDate()) - strtotime("now");
		if( $diff_time <= 0 )
			return 2;
	}
	
	public function isMine( $user )
	{
		return Doctrine::getTable('Activity')
					->createQuery('t')
					->leftJoin('t.Association a')
					->where('t.id = '.$this->getId().' AND a.user_id = '.$user)
					->count();
	}
	
	public function getDateSpanish()
	{
		$month = date("F", strtotime($this->getDate()));
		$in = array( 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December' );
		$out = array( 'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre' );
		$month = str_replace( $in, $out, $month );
		
		return $month.' '.date("j, Y", strtotime($this->getDate()));
	}
	
	public function save(Doctrine_Connection $conn = null)
	{	 
	  $conn = $conn ? $conn : $this->getTable()->getConnection();
	  $conn->beginTransaction();
	  try
	  {
		$ret = parent::save($conn);
		
		$dir = '/var/chroot/home/content/32/7923232/html/uploads';
		
		if( file_exists( $dir . '/activity/'.$this->getPicture() ) )
		{
		// Normal Image
		$image = new SimpleImage();
		$image->load( $dir . '/activity/'.$this->getPicture() );

		$dimension = $image->getHeight();
		if( $image->getWidth() > $image->getHeight() )
			$dimension = $image->getWidth();
		
		if( $image->getHeight() > 0 && $image->getWidth() > 0 && ( $image->getHeight() > 620 || $image->getWidth() > 620 ) )
		{
			$image->scale( ( ( 620 / $dimension ) * 100 ) );
			$image->save( $dir . '/activity/'.$this->getPicture() );
		}
		// End Normal Image
		
		// Thumbnail Image
		$thumbnail = new SimpleImage();
		$thumbnail->load( $dir . '/activity/'.$this->getPicture() );
		
		$dimension = $thumbnail->getHeight();
		if( $thumbnail->getWidth() > $thumbnail->getHeight() )
			$dimension = $thumbnail->getWidth();
		
		if( $thumbnail->getHeight() > 0 && $thumbnail->getWidth() > 0 && ( $thumbnail->getHeight() > 100 || $thumbnail->getWidth() > 100 ) )
		{
			$thumbnail->scale( ( ( 100 / $dimension ) * 100 ) );
			$thumbnail->save( $dir.'/activity_thumbnail/'.$this->getPicture() );
		}
		// End Thumbnail Image
		}
		$conn->commit();
	 
		return $ret;
	  }
	  catch (Exception $e)
	  {
		$conn->rollBack();
		throw $e;
	  }
	}
}
