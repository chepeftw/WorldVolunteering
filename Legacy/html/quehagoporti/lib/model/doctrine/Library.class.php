<?php

/**
 * Library
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    quehagoporti
 * @subpackage model
 * @author     Jose Alfredo Alvarez Aldana
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Library extends BaseLibrary
{
	
	public function getTitleSlug()
	{
	  return RouteTools::slugify( $this->getTitle() );
	}
	
	public function hasThisIpVoted( $ip )
	{
		return Doctrine::getTable('LibraryRating')
							->createQuery()
							->where('library_id = '.$this->getId().' AND ip = \''.$ip.'\'')
							->count();
	}
	
	public function countVotes()
	{
		$count = Doctrine::getTable('LibraryRating')
							->createQuery()
							->where('library_id = '.$this->getId())
							->count();
		$this->setRating( $count );
		$this->save();
		
		return $count;
	}
	
	public function getComments()
	{
		$comments = Doctrine::getTable('LibraryComment')
							->createQuery()
							->where('library_id = '.$this->getId())
							->orderBy('created_at ASC')
							->execute();
									
		return $comments;
	}
	
	public function save(Doctrine_Connection $conn = null)
	{	 
	  $conn = $conn ? $conn : $this->getTable()->getConnection();
	  $conn->beginTransaction();
	  try
	  {
		$ret = parent::save($conn);
	 
		$dir = '/var/chroot/home/content/32/7923232/html/uploads';
		
		if( file_exists( $dir . '/media_picture/'.$this->getPicture() ) )
		{
		// Normal Image
		$image = new SimpleImage();
		$image->load( $dir . '/media_picture/'.$this->getPicture() );

		$dimension = $image->getHeight();
		if( $image->getWidth() > $image->getHeight() )
			$dimension = $image->getWidth();
		
		if( $image->getHeight() > 0 && $image->getWidth() > 0 && ( $image->getHeight() > 620 || $image->getWidth() > 620 ) )
		{
			$image->scale( ( ( 620 / $dimension ) * 100 ) );
			$image->save( $dir . '/media_picture/'.$this->getPicture() );
		}
		// End Normal Image
		
		// Thumbnail Image
		$thumbnail = new SimpleImage();
		$thumbnail->load( $dir . '/media_picture/'.$this->getPicture() );
		
		$dimension = $thumbnail->getHeight();
		if( $thumbnail->getWidth() > $thumbnail->getHeight() )
			$dimension = $thumbnail->getWidth();
		
		if( $thumbnail->getHeight() > 0 && $thumbnail->getWidth() > 0 && ( $thumbnail->getHeight() > 100 || $thumbnail->getWidth() > 100 ) )
		{
			$thumbnail->scale( ( ( 100 / $dimension ) * 100 ) );
			$thumbnail->save( $dir.'/media_picture_thumbnail/'.$this->getPicture() );
		}
		// End Thumbnail Image
		}
		$conn->commit();
	 
		return $ret;
	  }
	  catch (Exception $e)
	  {
		$conn->rollBack();
		throw $e;
	  }
	}

	public function delete(Doctrine_Connection $conn = null)
	{ 
	  $ratings = Doctrine::getTable('LibraryRating')
						->createQuery()
						->where('library_id = '.$this->getId())
						->execute();
	  foreach( $ratings as $rating ) $rating->delete();
	  
	  $comments = Doctrine::getTable('LibraryComment')
						->createQuery()
						->where('library_id = '.$this->getId())
						->execute();
	  foreach( $comments as $comment ) $comment->delete();
	 
	  return parent::delete($conn);
	}
	
}
